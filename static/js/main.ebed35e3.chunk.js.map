{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","NUMBER_OF_PAGES","Math","ceil","IF_CURRENT_PAGE_IS_FIRST","IF_CURRENT_PAGE_IS_LAST","ifPageChange","page","className","cn","disabled","href","onClick","map","active","items","App","useState","setCurrentPage","setPerPage","START_ITEM","END_ITEM","length","id","defaultValue","onChange","event","target","value","htmlFor","item","index","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAAuC,SAAC,GAK9C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAQC,GACpCM,EAA2C,IAAhBL,EAC3BM,EAA0BN,IAAgBE,EAE1CK,EAAe,SAACC,GACpB,GACEA,IAASR,GACNQ,EAAO,GACPA,GAAQN,EAEX,OAAOD,EAAaO,IAMxB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUN,IADZ,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAaP,EAAc,IAL5C,oBAWDT,EAAW,EAAGW,GAAiBY,KAAI,SAAAN,GAAI,OACtC,oBACEC,UAAWC,IAAG,YAAa,CACzBK,OAAQP,IAASR,IAFrB,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAaC,IAJ9B,SAMGA,KAREA,MAaT,oBACEC,UAAWC,IAAG,YAAa,CACzBC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMN,EAAaP,EAAc,IAL5C,wBChEFgB,EAAQzB,EAAW,EAHX,IAIXuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAA8BD,mBAAiB,GAA/C,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEMC,EAAatB,EAAUC,EAAcD,EAAU,EAC/CuB,EAAWvB,EAAUC,EAAcgB,EAAMO,OAC3CP,EAAMO,OACNxB,EAAUC,EAEd,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCqB,EADjC,cACiDC,EADjD,eAnBQ,GAmBR,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,aAAc1B,EACd2B,SAAU,SAACC,GACTP,GAAYO,EAAMC,OAAOC,OACzBV,EAAe,IAPnB,UAUE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEX,MA/CM,GAgDNC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACO,GAAD,OAAUW,EAAeX,MAEzC,6BACGQ,EAAMF,KAAI,SAACiB,EAAMC,GAChB,OAAIA,GAASX,EAAa,GAAKW,EAAQV,EAEnC,oBAAI,UAAQ,OAAZ,SAA+BS,GAAPA,GAIrB,YC9DjBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ebed35e3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype PaginationType = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (arg0: number) => void,\n};\n\nexport const Pagination: React.FC<PaginationType> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const NUMBER_OF_PAGES = Math.ceil(total / perPage);\n  const IF_CURRENT_PAGE_IS_FIRST = currentPage === 1;\n  const IF_CURRENT_PAGE_IS_LAST = currentPage === NUMBER_OF_PAGES;\n\n  const ifPageChange = (page: number) => {\n    if (\n      page !== currentPage\n      && page > 0\n      && page <= NUMBER_OF_PAGES\n    ) {\n      return onPageChange(page);\n    }\n\n    return undefined;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: IF_CURRENT_PAGE_IS_FIRST,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={IF_CURRENT_PAGE_IS_FIRST}\n          onClick={() => ifPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, NUMBER_OF_PAGES).map(page => (\n        <li\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => ifPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: IF_CURRENT_PAGE_IS_LAST,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={IF_CURRENT_PAGE_IS_LAST}\n          onClick={() => ifPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n\n  const START_ITEM = perPage * currentPage - perPage + 1;\n  const END_ITEM = perPage * currentPage > items.length\n    ? items.length\n    : perPage * currentPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${START_ITEM} - ${END_ITEM} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {items.map((item, index) => {\n          if (index >= START_ITEM - 1 && index < END_ITEM) {\n            return (\n              <li data-cy=\"item\" key={item}>{item}</li>\n            );\n          }\n\n          return '';\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}